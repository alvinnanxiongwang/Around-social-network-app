
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"


	_test "net"


	_xtest "net_test"


)

var tests = []testing.InternalTest{

	{"TestSortByRFC6724", _test.TestSortByRFC6724},

	{"TestRFC6724PolicyTableClassify", _test.TestRFC6724PolicyTableClassify},

	{"TestRFC6724ClassifyScope", _test.TestRFC6724ClassifyScope},

	{"TestRFC6724CommonPrefixLength", _test.TestRFC6724CommonPrefixLength},

	{"TestCgoLookupIP", _test.TestCgoLookupIP},

	{"TestCgoLookupIPWithCancel", _test.TestCgoLookupIPWithCancel},

	{"TestCgoLookupPort", _test.TestCgoLookupPort},

	{"TestCgoLookupPortWithCancel", _test.TestCgoLookupPortWithCancel},

	{"TestCgoLookupPTR", _test.TestCgoLookupPTR},

	{"TestCgoLookupPTRWithCancel", _test.TestCgoLookupPTRWithCancel},

	{"TestConfHostLookupOrder", _test.TestConfHostLookupOrder},

	{"TestSystemConf", _test.TestSystemConf},

	{"TestConnAndListener", _test.TestConnAndListener},

	{"TestProhibitionaryDialArg", _test.TestProhibitionaryDialArg},

	{"TestDialLocal", _test.TestDialLocal},

	{"TestDialerDualStackFDLeak", _test.TestDialerDualStackFDLeak},

	{"TestDialParallel", _test.TestDialParallel},

	{"TestDialerFallbackDelay", _test.TestDialerFallbackDelay},

	{"TestDialParallelSpuriousConnection", _test.TestDialParallelSpuriousConnection},

	{"TestDialerPartialDeadline", _test.TestDialerPartialDeadline},

	{"TestDialerLocalAddr", _test.TestDialerLocalAddr},

	{"TestDialerDualStack", _test.TestDialerDualStack},

	{"TestDialerKeepAlive", _test.TestDialerKeepAlive},

	{"TestDialCancel", _test.TestDialCancel},

	{"TestCancelAfterDial", _test.TestCancelAfterDial},

	{"TestDialListenerAddr", _test.TestDialListenerAddr},

	{"TestDialerControl", _test.TestDialerControl},

	{"TestDialWithNonZeroDeadline", _test.TestDialWithNonZeroDeadline},

	{"TestDialContextCancelRace", _test.TestDialContextCancelRace},

	{"TestDNSSRVUniformity", _test.TestDNSSRVUniformity},

	{"TestWeighting", _test.TestWeighting},

	{"TestDNSTransportFallback", _test.TestDNSTransportFallback},

	{"TestSpecialDomainName", _test.TestSpecialDomainName},

	{"TestAvoidDNSName", _test.TestAvoidDNSName},

	{"TestLookupTorOnion", _test.TestLookupTorOnion},

	{"TestUpdateResolvConf", _test.TestUpdateResolvConf},

	{"TestGoLookupIPWithResolverConfig", _test.TestGoLookupIPWithResolverConfig},

	{"TestGoLookupIPOrderFallbackToFile", _test.TestGoLookupIPOrderFallbackToFile},

	{"TestErrorForOriginalNameWhenSearching", _test.TestErrorForOriginalNameWhenSearching},

	{"TestIgnoreLameReferrals", _test.TestIgnoreLameReferrals},

	{"TestIgnoreDNSForgeries", _test.TestIgnoreDNSForgeries},

	{"TestRetryTimeout", _test.TestRetryTimeout},

	{"TestRotate", _test.TestRotate},

	{"TestStrictErrorsLookupIP", _test.TestStrictErrorsLookupIP},

	{"TestStrictErrorsLookupTXT", _test.TestStrictErrorsLookupTXT},

	{"TestDNSGoroutineRace", _test.TestDNSGoroutineRace},

	{"TestIssue8434", _test.TestIssue8434},

	{"TestIssueNoSuchHostExists", _test.TestIssueNoSuchHostExists},

	{"TestNoSuchHost", _test.TestNoSuchHost},

	{"TestDNSDialTCP", _test.TestDNSDialTCP},

	{"TestTXTRecordTwoStrings", _test.TestTXTRecordTwoStrings},

	{"TestSingleRequestLookup", _test.TestSingleRequestLookup},

	{"TestDNSUseTCP", _test.TestDNSUseTCP},

	{"TestPTRandNonPTR", _test.TestPTRandNonPTR},

	{"TestCVE202133195", _test.TestCVE202133195},

	{"TestNullMX", _test.TestNullMX},

	{"TestRootNS", _test.TestRootNS},

	{"TestDNSReadConfig", _test.TestDNSReadConfig},

	{"TestDNSReadMissingFile", _test.TestDNSReadMissingFile},

	{"TestDNSDefaultSearch", _test.TestDNSDefaultSearch},

	{"TestDNSNameLength", _test.TestDNSNameLength},

	{"TestDNSName", _test.TestDNSName},

	{"TestSpuriousENOTAVAIL", _test.TestSpuriousENOTAVAIL},

	{"TestDialError", _test.TestDialError},

	{"TestProtocolDialError", _test.TestProtocolDialError},

	{"TestDialAddrError", _test.TestDialAddrError},

	{"TestListenError", _test.TestListenError},

	{"TestListenPacketError", _test.TestListenPacketError},

	{"TestProtocolListenError", _test.TestProtocolListenError},

	{"TestCloseError", _test.TestCloseError},

	{"TestAcceptError", _test.TestAcceptError},

	{"TestFileError", _test.TestFileError},

	{"TestResolveGoogle", _test.TestResolveGoogle},

	{"TestDialGoogle", _test.TestDialGoogle},

	{"TestFileConn", _test.TestFileConn},

	{"TestFileListener", _test.TestFileListener},

	{"TestFilePacketConn", _test.TestFilePacketConn},

	{"TestFileCloseRace", _test.TestFileCloseRace},

	{"TestLookupStaticHost", _test.TestLookupStaticHost},

	{"TestLookupStaticAddr", _test.TestLookupStaticAddr},

	{"TestHostCacheModification", _test.TestHostCacheModification},

	{"TestParseProcNet", _test.TestParseProcNet},

	{"TestInterfaces", _test.TestInterfaces},

	{"TestInterfaceAddrs", _test.TestInterfaceAddrs},

	{"TestInterfaceUnicastAddrs", _test.TestInterfaceUnicastAddrs},

	{"TestInterfaceMulticastAddrs", _test.TestInterfaceMulticastAddrs},

	{"TestPointToPointInterface", _test.TestPointToPointInterface},

	{"TestInterfaceArrivalAndDeparture", _test.TestInterfaceArrivalAndDeparture},

	{"TestInterfaceArrivalAndDepartureZoneCache", _test.TestInterfaceArrivalAndDepartureZoneCache},

	{"TestParseIP", _test.TestParseIP},

	{"TestLookupWithIP", _test.TestLookupWithIP},

	{"TestMarshalEmptyIP", _test.TestMarshalEmptyIP},

	{"TestIPString", _test.TestIPString},

	{"TestIPMask", _test.TestIPMask},

	{"TestIPMaskString", _test.TestIPMaskString},

	{"TestParseCIDR", _test.TestParseCIDR},

	{"TestIPNetContains", _test.TestIPNetContains},

	{"TestIPNetString", _test.TestIPNetString},

	{"TestCIDRMask", _test.TestCIDRMask},

	{"TestNetworkNumberAndMask", _test.TestNetworkNumberAndMask},

	{"TestSplitHostPort", _test.TestSplitHostPort},

	{"TestJoinHostPort", _test.TestJoinHostPort},

	{"TestIPAddrFamily", _test.TestIPAddrFamily},

	{"TestIPAddrScope", _test.TestIPAddrScope},

	{"TestResolveIPAddr", _test.TestResolveIPAddr},

	{"TestIPConnLocalName", _test.TestIPConnLocalName},

	{"TestIPConnRemoteName", _test.TestIPConnRemoteName},

	{"TestDialListenIPArgs", _test.TestDialListenIPArgs},

	{"TestAddrList", _test.TestAddrList},

	{"TestAddrListPartition", _test.TestAddrListPartition},

	{"TestTCPListener", _test.TestTCPListener},

	{"TestUDPListener", _test.TestUDPListener},

	{"TestDualStackTCPListener", _test.TestDualStackTCPListener},

	{"TestDualStackUDPListener", _test.TestDualStackUDPListener},

	{"TestWildWildcardListener", _test.TestWildWildcardListener},

	{"TestIPv4MulticastListener", _test.TestIPv4MulticastListener},

	{"TestIPv6MulticastListener", _test.TestIPv6MulticastListener},

	{"TestClosingListener", _test.TestClosingListener},

	{"TestListenConfigControl", _test.TestListenConfigControl},

	{"TestLookupGoogleSRV", _test.TestLookupGoogleSRV},

	{"TestLookupGmailMX", _test.TestLookupGmailMX},

	{"TestLookupGmailNS", _test.TestLookupGmailNS},

	{"TestLookupGmailTXT", _test.TestLookupGmailTXT},

	{"TestLookupGooglePublicDNSAddr", _test.TestLookupGooglePublicDNSAddr},

	{"TestLookupIPv6LinkLocalAddr", _test.TestLookupIPv6LinkLocalAddr},

	{"TestLookupIPv6LinkLocalAddrWithZone", _test.TestLookupIPv6LinkLocalAddrWithZone},

	{"TestLookupCNAME", _test.TestLookupCNAME},

	{"TestLookupGoogleHost", _test.TestLookupGoogleHost},

	{"TestLookupLongTXT", _test.TestLookupLongTXT},

	{"TestLookupGoogleIP", _test.TestLookupGoogleIP},

	{"TestReverseAddress", _test.TestReverseAddress},

	{"TestDNSFlood", _test.TestDNSFlood},

	{"TestLookupDotsWithLocalSource", _test.TestLookupDotsWithLocalSource},

	{"TestLookupDotsWithRemoteSource", _test.TestLookupDotsWithRemoteSource},

	{"TestLookupPort", _test.TestLookupPort},

	{"TestLookupPort_Minimal", _test.TestLookupPort_Minimal},

	{"TestLookupProtocol_Minimal", _test.TestLookupProtocol_Minimal},

	{"TestLookupNonLDH", _test.TestLookupNonLDH},

	{"TestLookupContextCancel", _test.TestLookupContextCancel},

	{"TestNilResolverLookup", _test.TestNilResolverLookup},

	{"TestLookupHostCancel", _test.TestLookupHostCancel},

	{"TestConcurrentPreferGoResolversDial", _test.TestConcurrentPreferGoResolversDial},

	{"TestIPVersion", _test.TestIPVersion},

	{"TestLookupIPAddrPreservesContextValues", _test.TestLookupIPAddrPreservesContextValues},

	{"TestLookupIPAddrConcurrentCallsForNetworks", _test.TestLookupIPAddrConcurrentCallsForNetworks},

	{"TestWithUnexpiredValuesPreserved", _test.TestWithUnexpiredValuesPreserved},

	{"TestLookupNullByte", _test.TestLookupNullByte},

	{"TestResolverLookupIP", _test.TestResolverLookupIP},

	{"TestDNSTimeout", _test.TestDNSTimeout},

	{"TestParseMAC", _test.TestParseMAC},

	{"TestCloseRead", _test.TestCloseRead},

	{"TestCloseWrite", _test.TestCloseWrite},

	{"TestConnClose", _test.TestConnClose},

	{"TestListenerClose", _test.TestListenerClose},

	{"TestPacketConnClose", _test.TestPacketConnClose},

	{"TestListenCloseListen", _test.TestListenCloseListen},

	{"TestAcceptIgnoreAbortedConnRequest", _test.TestAcceptIgnoreAbortedConnRequest},

	{"TestZeroByteRead", _test.TestZeroByteRead},

	{"TestReadTimeoutUnblocksRead", _test.TestReadTimeoutUnblocksRead},

	{"TestCloseUnblocksRead", _test.TestCloseUnblocksRead},

	{"TestNotTemporaryRead", _test.TestNotTemporaryRead},

	{"TestErrors", _test.TestErrors},

	{"TestParseNSSConf", _test.TestParseNSSConf},

	{"TestPacketConn", _test.TestPacketConn},

	{"TestConnAndPacketConn", _test.TestConnAndPacketConn},

	{"TestReadLine", _test.TestReadLine},

	{"TestDtoi", _test.TestDtoi},

	{"TestParsePort", _test.TestParsePort},

	{"TestTCPListenerSpecificMethods", _test.TestTCPListenerSpecificMethods},

	{"TestTCPConnSpecificMethods", _test.TestTCPConnSpecificMethods},

	{"TestUDPConnSpecificMethods", _test.TestUDPConnSpecificMethods},

	{"TestIPConnSpecificMethods", _test.TestIPConnSpecificMethods},

	{"TestUnixListenerSpecificMethods", _test.TestUnixListenerSpecificMethods},

	{"TestUnixConnSpecificMethods", _test.TestUnixConnSpecificMethods},

	{"TestRawConnReadWrite", _test.TestRawConnReadWrite},

	{"TestRawConnControl", _test.TestRawConnControl},

	{"TestSendfile", _test.TestSendfile},

	{"TestSendfileParts", _test.TestSendfileParts},

	{"TestSendfileSeeked", _test.TestSendfileSeeked},

	{"TestSendfilePipe", _test.TestSendfilePipe},

	{"TestSendfileOnWriteTimeoutExceeded", _test.TestSendfileOnWriteTimeoutExceeded},

	{"TestTCPServer", _test.TestTCPServer},

	{"TestUnixAndUnixpacketServer", _test.TestUnixAndUnixpacketServer},

	{"TestUDPServer", _test.TestUDPServer},

	{"TestUnixgramServer", _test.TestUnixgramServer},

	{"TestMaxAckBacklog", _test.TestMaxAckBacklog},

	{"TestSplice", _test.TestSplice},

	{"TestResolveTCPAddr", _test.TestResolveTCPAddr},

	{"TestTCPListenerName", _test.TestTCPListenerName},

	{"TestIPv6LinkLocalUnicastTCP", _test.TestIPv6LinkLocalUnicastTCP},

	{"TestTCPConcurrentAccept", _test.TestTCPConcurrentAccept},

	{"TestTCPReadWriteAllocs", _test.TestTCPReadWriteAllocs},

	{"TestTCPStress", _test.TestTCPStress},

	{"TestTCPSelfConnect", _test.TestTCPSelfConnect},

	{"TestTCPBig", _test.TestTCPBig},

	{"TestCopyPipeIntoTCP", _test.TestCopyPipeIntoTCP},

	{"TestTCPSpuriousConnSetupCompletion", _test.TestTCPSpuriousConnSetupCompletion},

	{"TestTCPSpuriousConnSetupCompletionWithCancel", _test.TestTCPSpuriousConnSetupCompletionWithCancel},

	{"TestDialTimeout", _test.TestDialTimeout},

	{"TestDialTimeoutMaxDuration", _test.TestDialTimeoutMaxDuration},

	{"TestAcceptTimeout", _test.TestAcceptTimeout},

	{"TestAcceptTimeoutMustReturn", _test.TestAcceptTimeoutMustReturn},

	{"TestAcceptTimeoutMustNotReturn", _test.TestAcceptTimeoutMustNotReturn},

	{"TestReadTimeout", _test.TestReadTimeout},

	{"TestReadTimeoutMustNotReturn", _test.TestReadTimeoutMustNotReturn},

	{"TestReadFromTimeout", _test.TestReadFromTimeout},

	{"TestWriteTimeout", _test.TestWriteTimeout},

	{"TestWriteTimeoutMustNotReturn", _test.TestWriteTimeoutMustNotReturn},

	{"TestWriteToTimeout", _test.TestWriteToTimeout},

	{"TestReadTimeoutFluctuation", _test.TestReadTimeoutFluctuation},

	{"TestReadFromTimeoutFluctuation", _test.TestReadFromTimeoutFluctuation},

	{"TestWriteTimeoutFluctuation", _test.TestWriteTimeoutFluctuation},

	{"TestVariousDeadlines", _test.TestVariousDeadlines},

	{"TestVariousDeadlines1Proc", _test.TestVariousDeadlines1Proc},

	{"TestVariousDeadlines4Proc", _test.TestVariousDeadlines4Proc},

	{"TestReadWriteProlongedTimeout", _test.TestReadWriteProlongedTimeout},

	{"TestReadWriteDeadlineRace", _test.TestReadWriteDeadlineRace},

	{"TestConcurrentSetDeadline", _test.TestConcurrentSetDeadline},

	{"TestResolveUDPAddr", _test.TestResolveUDPAddr},

	{"TestWriteToUDP", _test.TestWriteToUDP},

	{"TestUDPConnLocalName", _test.TestUDPConnLocalName},

	{"TestUDPConnLocalAndRemoteNames", _test.TestUDPConnLocalAndRemoteNames},

	{"TestIPv6LinkLocalUnicastUDP", _test.TestIPv6LinkLocalUnicastUDP},

	{"TestUDPZeroBytePayload", _test.TestUDPZeroBytePayload},

	{"TestUDPZeroByteBuffer", _test.TestUDPZeroByteBuffer},

	{"TestUDPReadSizeError", _test.TestUDPReadSizeError},

	{"TestUDPReadTimeout", _test.TestUDPReadTimeout},

	{"TestAllocs", _test.TestAllocs},

	{"TestUDPIPVersionReadMsg", _test.TestUDPIPVersionReadMsg},

	{"TestUnixgramAutobind", _test.TestUnixgramAutobind},

	{"TestUnixAutobindClose", _test.TestUnixAutobindClose},

	{"TestUnixgramLinuxAbstractLongName", _test.TestUnixgramLinuxAbstractLongName},

	{"TestUnixConnReadMsgUnixSCMRightsCloseOnExec", _test.TestUnixConnReadMsgUnixSCMRightsCloseOnExec},

	{"TestReadUnixgramWithUnnamedSocket", _test.TestReadUnixgramWithUnnamedSocket},

	{"TestUnixgramZeroBytePayload", _test.TestUnixgramZeroBytePayload},

	{"TestUnixgramZeroByteBuffer", _test.TestUnixgramZeroByteBuffer},

	{"TestUnixgramWrite", _test.TestUnixgramWrite},

	{"TestUnixConnLocalAndRemoteNames", _test.TestUnixConnLocalAndRemoteNames},

	{"TestUnixgramConnLocalAndRemoteNames", _test.TestUnixgramConnLocalAndRemoteNames},

	{"TestUnixUnlink", _test.TestUnixUnlink},

	{"TestEndlessWrite", _test.TestEndlessWrite},

	{"TestBuffers_read", _test.TestBuffers_read},

	{"TestBuffers_consume", _test.TestBuffers_consume},

	{"TestBuffers_WriteTo", _test.TestBuffers_WriteTo},

	{"TestWritevError", _test.TestWritevError},

	{"TestPipe", _xtest.TestPipe},

	{"TestPipeCloseError", _xtest.TestPipeCloseError},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkGoLookupIP", _test.BenchmarkGoLookupIP},

	{"BenchmarkGoLookupIPNoSuchHost", _test.BenchmarkGoLookupIPNoSuchHost},

	{"BenchmarkGoLookupIPWithBrokenNameServer", _test.BenchmarkGoLookupIPWithBrokenNameServer},

	{"BenchmarkDNSName", _test.BenchmarkDNSName},

	{"BenchmarkInterfaces", _test.BenchmarkInterfaces},

	{"BenchmarkInterfaceByIndex", _test.BenchmarkInterfaceByIndex},

	{"BenchmarkInterfaceByName", _test.BenchmarkInterfaceByName},

	{"BenchmarkInterfaceAddrs", _test.BenchmarkInterfaceAddrs},

	{"BenchmarkInterfacesAndAddrs", _test.BenchmarkInterfacesAndAddrs},

	{"BenchmarkInterfacesAndMulticastAddrs", _test.BenchmarkInterfacesAndMulticastAddrs},

	{"BenchmarkParseIP", _test.BenchmarkParseIP},

	{"BenchmarkIPString", _test.BenchmarkIPString},

	{"BenchmarkIPMaskString", _test.BenchmarkIPMaskString},

	{"BenchmarkIPEqual", _test.BenchmarkIPEqual},

	{"BenchmarkSplice", _test.BenchmarkSplice},

	{"BenchmarkTCP4OneShot", _test.BenchmarkTCP4OneShot},

	{"BenchmarkTCP4OneShotTimeout", _test.BenchmarkTCP4OneShotTimeout},

	{"BenchmarkTCP4Persistent", _test.BenchmarkTCP4Persistent},

	{"BenchmarkTCP4PersistentTimeout", _test.BenchmarkTCP4PersistentTimeout},

	{"BenchmarkTCP6OneShot", _test.BenchmarkTCP6OneShot},

	{"BenchmarkTCP6OneShotTimeout", _test.BenchmarkTCP6OneShotTimeout},

	{"BenchmarkTCP6Persistent", _test.BenchmarkTCP6Persistent},

	{"BenchmarkTCP6PersistentTimeout", _test.BenchmarkTCP6PersistentTimeout},

	{"BenchmarkTCP4ConcurrentReadWrite", _test.BenchmarkTCP4ConcurrentReadWrite},

	{"BenchmarkTCP6ConcurrentReadWrite", _test.BenchmarkTCP6ConcurrentReadWrite},

	{"BenchmarkSetReadDeadline", _test.BenchmarkSetReadDeadline},

	{"BenchmarkUDP6LinkLocalUnicast", _test.BenchmarkUDP6LinkLocalUnicast},

	{"BenchmarkReadWriteMsgUDPAddrPort", _test.BenchmarkReadWriteMsgUDPAddrPort},

	{"BenchmarkWriteToReadFromUDP", _test.BenchmarkWriteToReadFromUDP},

	{"BenchmarkWriteToReadFromUDPAddrPort", _test.BenchmarkWriteToReadFromUDPAddrPort},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleIPv4", _xtest.ExampleIPv4, "8.8.8.8\n", false},

	{"ExampleParseCIDR", _xtest.ExampleParseCIDR, "192.0.2.1\n192.0.2.0/24\n2001:db8:a0b:12f0::1\n2001:db8::/32\n", false},

	{"ExampleParseIP", _xtest.ExampleParseIP, "192.0.2.1\n2001:db8::68\n<nil>\n", false},

	{"ExampleIP_DefaultMask", _xtest.ExampleIP_DefaultMask, "ffffff00\n", false},

	{"ExampleIP_Equal", _xtest.ExampleIP_Equal, "true\nfalse\ntrue\n", false},

	{"ExampleIP_IsGlobalUnicast", _xtest.ExampleIP_IsGlobalUnicast, "true\ntrue\nfalse\ntrue\ntrue\nfalse\n", false},

	{"ExampleIP_IsInterfaceLocalMulticast", _xtest.ExampleIP_IsInterfaceLocalMulticast, "true\nfalse\nfalse\n", false},

	{"ExampleIP_IsLinkLocalMulticast", _xtest.ExampleIP_IsLinkLocalMulticast, "true\nfalse\ntrue\nfalse\n", false},

	{"ExampleIP_IsLinkLocalUnicast", _xtest.ExampleIP_IsLinkLocalUnicast, "true\nfalse\ntrue\nfalse\n", false},

	{"ExampleIP_IsLoopback", _xtest.ExampleIP_IsLoopback, "true\nfalse\ntrue\nfalse\n", false},

	{"ExampleIP_IsMulticast", _xtest.ExampleIP_IsMulticast, "true\ntrue\nfalse\ntrue\ntrue\nfalse\n", false},

	{"ExampleIP_IsPrivate", _xtest.ExampleIP_IsPrivate, "true\nfalse\ntrue\nfalse\n", false},

	{"ExampleIP_IsUnspecified", _xtest.ExampleIP_IsUnspecified, "true\nfalse\ntrue\nfalse\n", false},

	{"ExampleIP_Mask", _xtest.ExampleIP_Mask, "192.0.2.0\n2001:db8::\n", false},

	{"ExampleIP_String", _xtest.ExampleIP_String, "fc00::\n10.255.0.0\n", false},

	{"ExampleIP_To16", _xtest.ExampleIP_To16, "fc00::\n10.255.0.0\n", false},

	{"ExampleIP_to4", _xtest.ExampleIP_to4, "<nil>\n10.255.0.0\n", false},

	{"ExampleCIDRMask", _xtest.ExampleCIDRMask, "fffffffe\nffffffffffffffff0000000000000000\n", false},

	{"ExampleIPv4Mask", _xtest.ExampleIPv4Mask, "ffffff00\n", false},

}

func init() {
	testdeps.ImportPath = "net"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_test.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

